name: Periodic cluster integration tests
on:
  workflow_dispatch:
  schedule:
  - cron: '0 23 * * *'

jobs:
  integration-tests-dev:
    name: Cluster integration tests for dev
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - id: 'get-credentials'
        name: 'Login Kubernetes Cluster'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'sm-dev'
          location: 'europe-west1-b'
      - name: Run e2e test
        run: |
          kubectl get pods -n capact-system
          kubectl get deploy capact-engine -n capact-system -o yaml > /tmp/capact-engine.yaml
          cat /tmp/capact-engine.yaml
          helm test capact --namespace=capact-system --timeout="30m" --logs
        env:
          WORKSPACE: '.'

  integration-tests-stage:
    name: Cluster integration tests for stage
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      - id: 'get-credentials'
        name: 'Login Kubernetes Cluster'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'sm-stage'
          location: 'europe-west1-b'
      - name: Run e2e test
        run: |
          kubectl get pods -n capact-system
          kubectl get deploy capact-engine -n capact-system -o yaml > /tmp/capact-engine.yaml
          cat /tmp/capact-engine.yaml
          helm test capact --namespace=capact-system --timeout="30m" --logs
        env:
          WORKSPACE: '.'
    
  # integration-tests-kone:
  #   name: Cluster integration tests for kone
  #   runs-on: ubuntu-latest
  #   environment: kone
  #   permissions:
  #     contents: read

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - id: 'auth'
  #       name: 'Authenticate to Google Cloud'
  #       uses: 'google-github-actions/auth@v1'
  #       with:
  #         credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
  #     - id: 'get-credentials'
  #       name: 'Login Kubernetes Cluster'
  #       uses: 'google-github-actions/get-gke-credentials@v1'
  #       with:
  #         cluster_name: 'sm-cluster-kone'
  #         location: 'europe-west1-b'
  #     - uses: azure/setup-helm@v3
  #       name: 'Set up helm'
  #       with:
  #         version: 'v3.10.2' # default is latest (stable)
  #       id: install-helm
  #     - uses: azure/setup-kubectl@v3
  #       name: 'Set up kubectl'
  #       with:
  #         version: 'v1.23.8'
  #       id: install-kubectl
  #     - name: Run e2e test
  #       run: |
  #         helm test capact --namespace=capact-system --timeout="30m" --logs
  #       env:
  #         WORKSPACE: '.'
  
  # integration-tests-ibmlz:
  #   name: Cluster integration tests for ibmlz
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   permissions:
  #     contents: read

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - id: 'auth'
  #       name: 'Authenticate to Google Cloud'
  #       uses: 'google-github-actions/auth@v1'
  #       with:
  #         credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
  #     - id: 'get-credentials'
  #       name: 'Login Kubernetes Cluster'
  #       uses: 'google-github-actions/get-gke-credentials@v1'
  #       with:
  #         cluster_name: '${{ secrets.CLUSTER_NAME }}'
  #         location: 'europe-west1-b'
  #     - name: Run e2e test
  #       run: |
  #         helm test capact --namespace=capact-system --timeout="30m" --logs
  #       env:
  #         WORKSPACE: '.'
    
  # integration-tests-neste-dev:
  #   name: Cluster integration tests for neste dev
  #   runs-on: ubuntu-latest
  #   environment: dev
  #   permissions:
  #     contents: read

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - id: 'auth'
  #       name: 'Authenticate to Google Cloud'
  #       uses: 'google-github-actions/auth@v1'
  #       with:
  #         credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
  #     - id: 'get-credentials'
  #       name: 'Login Kubernetes Cluster'
  #       uses: 'google-github-actions/get-gke-credentials@v1'
  #       with:
  #         cluster_name: '${{ secrets.CLUSTER_NAME }}'
  #         location: 'europe-west1-b'
  #     - uses: azure/setup-helm@v3
  #       name: 'Set up helm'
  #       with:
  #         version: 'v3.10.2' # default is latest (stable)
  #       id: install-helm
  #     - uses: azure/setup-kubectl@v3
  #       name: 'Set up kubectl'
  #       with:
  #         version: 'v1.23.8'
  #       id: install-kubectl
  #     - name: Run e2e test
  #       run: |
  #         helm test capact --namespace=capact-system --timeout="30m" --logs
  #       env:
  #         WORKSPACE: '.'

  # slackNotification:
  #   name: Slack Notification
  #   runs-on: ubuntu-latest
  #   needs: [ integration-tests-dev, integration-tests-stage, integration-tests-kone, integration-tests-ibmlz, integration-tests-neste-dev ]
  #   if: always()

  #   steps:
  #     - name: Slack Notification
  #       if: ${{ needs.integration-tests-dev.result != 'success' || needs.integration-tests-stage.result != 'success' || needs.integration-tests-kone.result != 'success' || needs.integration-tests-ibmlz.result != 'success' || needs.integration-tests-neste-dev.result != 'success' }}
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_USERNAME: SuperMaestro CI Notifier
  #         SLACK_COLOR: 'red'
  #         SLACK_TITLE: 'Message'
  #         SLACK_CHANNEL: 'pat-supermaestro-alert-notification'
  #         SLACK_MESSAGE: "Failed to run E2E"
  #         SLACK_ICON_EMOJI: ':this-is-fine:'
  #         SLACK_FOOTER: "Hopefully it is not an error, it's gorgeous feature"
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_PRIV_DEV_TEAM_WEBHOOK }}
